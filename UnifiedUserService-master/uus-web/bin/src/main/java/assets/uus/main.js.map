{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent }   from './register/register.component';\nimport { LoginComponent }   from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1 {\\n  color: #369;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 150%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osMENBQTBDO0VBQzFDLGdCQUFnQjtDQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDEge1xuICBjb2xvcjogIzM2OTtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTUwJTtcbn1cbiJdfQ== */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1> {{ title }} </h1>\\n\\n  <nav mat-tab-nav-bar [backgroundColor]=\\\"background\\\" style=\\\"width:100%;\\\">\\n  \\t<a mat-tab  style=\\\"width:35%\\\"></a>\\n  \\t<a mat-tab-link routerLink=\\\"/login\\\" [active]=\\\"activeLink == link\\\" label=\\\"Login\\\" style=\\\"width:15%\\\"> Login </a>\\n  \\t<a mat-tab-link routerLink=\\\"/register\\\" [active]=\\\"activeLink == link\\\" label=\\\"Register\\\" style=\\\"width:15%\\\"> Register </a>\\n  \\t<a mat-tab style=\\\"width:35%\\\"></a>\\n  </nav>\\n</div>\\n<router-outlet></router-outlet>\\n\\n\\n<div style=\\\"text-align:center\\\">\\n<p>&copy; 2018 Unified User Service<p>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Unified User Service';\n}\n","import { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTabsModule} from '@angular/material/tabs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatButtonModule, MatCheckboxModule,MatInputModule,MatTabsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Email\\\" type=\\\"text\\\" formControlName=\\\"email\\\">\\n    </mat-form-field>\\n    <br/>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n    </mat-form-field>\\n    <br/>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n  </form>\\n  <p>\\n    Form Status: {{ loginForm.status }}\\n  </p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  //export class Request {\n   // redirectLink: string;\n    //publicAppId: string;\n  //}\n  //request: new Request;\n\n  loginForm = new FormGroup({\n    email: new FormControl('',Validators.required),\n    password: new FormControl('',Validators.required),\n    role: new FormControl('Hr',Validators.required),\n    publicAppId: new FormControl('dwe',Validators.required)\n  });\n\n  onSubmit () {\n\tconsole.log(this.loginForm);\n  }\n\n  constructor(\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    let redirectTo = this.route.snapshot.paramMap.get('redirectTo');\n    let publicAppId = this.route.snapshot.paramMap.get('publicAppId');\n    console.log(redirectTo);\n    console.log(publicAppId);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div style=\\\"text-align:center\\\">\\n  <form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Name\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\n      </mat-form-field>\\n      <br/>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" formControlName=\\\"email\\\">\\n      </mat-form-field>\\n      <br/>\\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Contact\\\" type=\\\"text\\\" formControlName=\\\"contactNumber\\\">\\n      </mat-form-field>\\n      <br/>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n      </mat-form-field>\\n      <br/>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Confirm Password\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\">\\n      </mat-form-field>\\n      <br/>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!registrationForm.valid\\\">Register</button>\\n  </form>\\n  <p>\\n    Form Status: {{ registrationForm.status }}\\n  </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { User } from '../user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    'Authorization': 'my-auth-token'\n  })\n};\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n  user = new User;\n  registrationForm = new FormGroup({\n    name: new FormControl('',Validators.required),\n    email: new FormControl('',Validators.required),\n    contactNumber: new FormControl('',Validators.required),\n    password: new FormControl('',Validators.required),\n    confirmPassword: new FormControl('',Validators.required),\n    role: new FormControl('Hr',Validators.required),\n    publicAppId: new FormControl('dwe',Validators.required)\n  });\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private http: HttpClient,\n  ) {}\n\n  ngOnInit() {\n    let redirectTo = this.route.snapshot.paramMap.get('redirectTo');\n    let publicAppId = this.route.snapshot.paramMap.get('publicAppId');\n    console.log(redirectTo);\n    console.log(publicAppId);\n  }\n\n  onSubmit() {\n    // TODO: Use EventEmitter with form value\n     \n    console.warn(this.registrationForm.value);\n    //this.router.navigate(['/login', { redirectTo: 'https://www.google.com/sfsdf/#/sdfsf', publicAppId: 'mymapit' }]);\n\n        this.user.name = this.registrationForm.get('name').value\n        this.user.email = this.registrationForm.get('email').value\n        this.user.contactNumber = this.registrationForm.get('contactNumber').value\n        this.user.password = this.registrationForm.get('password').value\n        //this.user.confirmPassword = this.registrationForm.get('confirmPassword').value\n        this.user.role = this.registrationForm.get('role').value\n//        this.user.publicAppId = this.registrationForm.get('publicAppId').value\n\n        this.register (this.user).subscribe (user => console.log(user))\n  }\n\n  register (user : User) {\n    return this.http.post<FormGroup>(\"/ajax/register/user\", user, httpOptions)\n  }\n}\n","export class User {\n\tname: string;\n\temail: string;\n\tcontactNumber: string;\n\tpassword: string;\n\tconfirmPassword: string;\n\trole: string;\n\tpublicAppId: string;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}